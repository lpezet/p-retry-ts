{
	"name": "p-retry-cjs",
	"version": "6.2.1",
	"description": "Retry a promise-returning or async function",
	"license": "MIT",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/lpezet/p-retry-ts.git"
	},
	"author": {
		"name": "Sindre Sorhus",
		"email": "sindresorhus@gmail.com",
		"url": "https://sindresorhus.com"
	},
	"contributors": [
		{
			"name": "Luke Pezet",
			"email": "lpezet@gmail.com"
		}
	],
	"exports": "./dist/index.js",
	"types": "./dist/index.d.ts",
	"sideEffects": false,
	"engines": {
		"node": ">=16.17"
	},
	"scripts": {
		"test": "jest",
		"build": "tsc",
		"clean": "rimraf dist",
		"dist": "npm run clean && tsc",
		"prepublish": "npm run dist"
	},
	"files": [
		"dist"
	],
	"keywords": [
		"promise",
		"retry",
		"retries",
		"operation",
		"failed",
		"rejected",
		"try",
		"exponential",
		"backoff",
		"attempt",
		"async",
		"await",
		"promises",
		"concurrently",
		"concurrency",
		"parallel",
		"bluebird"
	],
	"dependencies": {
		"@types/retry": "^0.12.2",
		"retry": "^0.13.1"
	},
	"devDependencies": {
		"@ava/typescript": "^4.1.0",
		"@types/jest": "^29.5.12",
		"ava": "^5.3.1",
		"delay": "^6.0.0",
		"jest": "^29.7.0",
		"rimraf": "^5.0.5",
		"ts-jest": "^29.1.2",
		"tsd": "^0.28.1",
		"typescript": "^5.4.5",
		"xo": "^0.56.0"
	},
	"jest": {
		"coverageThreshold": {
			"global": {
				"branches": 60,
				"functions": 70,
				"lines": 75,
				"statements": 80
			}
		},
		"moduleFileExtensions": [
			"js",
			"json",
			"ts"
		],
		"moduleNameMapper": {
			"^src/(.*)$": "<rootDir>/../src/$1"
		},
		"rootDir": "test",
		"testRegex": ".*\\.spec\\.ts$",
		"transform": {
			"^.+\\.(t|j)s$": [
				"ts-jest",
				{
					"useESM": true
				}
			]
		},
		"collectCoverageFrom": [
			"**/*.(t|j)s"
		],
		"coverageDirectory": "../coverage",
		"coveragePathIgnorePatterns": [
			"node_modules",
			"test-config",
			"interfaces",
			"jestGlobalMocks.ts",
			".module.ts",
			"<rootDir>/index.ts",
			".mock.ts",
			"logger",
			"types.ts",
			".config.ts",
			"configuration.ts"
		],
		"testEnvironment": "node"
	}
}
